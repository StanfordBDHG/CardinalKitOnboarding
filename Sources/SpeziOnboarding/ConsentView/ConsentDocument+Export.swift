//
// This source file is part of the Stanford Spezi open-source project
//
// SPDX-FileCopyrightText: 2022 Stanford University and the project authors (see CONTRIBUTORS.md)
//
// SPDX-License-Identifier: MIT
//

import PDFKit
import PencilKit
import SwiftUI
import TPPDF

/// Extension of `ConsentDocument` enabling the export of the signed consent page.
extension ConsentDocument {
    #if !os(macOS)
    /// As the `PKDrawing.image()` function automatically converts the ink color dependent on the used color scheme (light or dark mode),
    /// force the ink used in the `UIImage` of the `PKDrawing` to always be black by adjusting the signature ink according to the color scheme.
    @MainActor private var blackInkSignatureImage: UIImage {
        var updatedDrawing = PKDrawing()
    
        for stroke in signature.strokes {
            let blackStroke = PKStroke(
                ink: PKInk(stroke.ink.inkType, color: colorScheme == .light ? .black : .white),
                path: stroke.path,
                transform: stroke.transform,
                mask: stroke.mask
            )

            updatedDrawing.strokes.append(blackStroke)
        }

        #if os(iOS)
        let scale = UIScreen.main.scale
        #else
        let scale = 3.0 // retina scale is default
        #endif

        return updatedDrawing.image(
            from: .init(x: 0, y: 0, width: signatureSize.width, height: signatureSize.height),
            scale: scale
        )
    }
    #endif
    
    /// Exports the signed consent form as a `PDFKit.PDFDocument`.
    /// The PDF generated by TPPDF and then converted to a TPDFKit.PDFDocument.
    /// Renders the `PDFDocument` according to the specified ``ConsentDocument/ExportConfiguration``.
    ///
    /// - Returns: The exported consent form in PDF format as a PDFKit `PDFDocument`
    @MainActor
    func export() async throws -> PDFKit.PDFDocument {
        documentExport.signature = signature
        documentExport.name = name
        #if !os(macOS)
        documentExport.signatureImage = blackInkSignatureImage
        return try await documentExport.export()
        #else
        return try await documentExport.export()
        #endif
    }
}
